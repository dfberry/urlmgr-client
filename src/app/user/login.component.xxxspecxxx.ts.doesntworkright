import { NO_ERRORS_SCHEMA } from '@angular/core';
import {
  inject,
  async,
  TestBed,
  ComponentFixture
} from '@angular/core/testing';

import { Title, By } from '@angular/platform-browser';

// Load the implementations that should be tested
import { LoginComponent } from './login.component';
import { Http } from '@angular/http';
import { AuthenticationService } from './auth.service';
import { RouterTestingModule } from '@angular/router/testing';
import { Router } from '@angular/router'; 
import { UserEvent } from './user.broadcaster';
import { AbstractControl, FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule, FormsModule } from '@angular/forms';


describe(`LoginComponent`, () => {
  let comp: LoginComponent;
  let fixture: ComponentFixture<LoginComponent>;
  //let titleService: Title; 

  // async beforeEach
  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ LoginComponent ],
      imports: [
        RouterTestingModule,
        FormsModule
      ],
      providers: [
        { provide: AuthenticationService},
        { provide: Http},
        { provide: Router},
        { provide: UserEvent},
      ]
    })
    .compileComponents(); // compile template and css

    fixture = TestBed.createComponent(LoginComponent);
    comp    = fixture.componentInstance;

    fixture.detectChanges(); // trigger initial data binding
  }));



  it(`should be readly initialized`, () => {
    expect(fixture).toBeDefined();
    expect(comp).toBeDefined();
  });
  it('should log ngOnInit', () => {
    spyOn(console, 'log');
    expect(console.log).not.toHaveBeenCalled();

    comp.ngOnInit();
    expect(console.log).toHaveBeenCalled();
  });
  it('should login successfully', () =>{

      comp.username="1@1.com";
      comp.password="1@1.com";

    // inject your guard service AND Router
    async(inject([AuthenticationService, Router, Http, UserEvent], 
      (authService, router, http, userEvent) => {

      // add a spy
      spyOn(router, 'navigate');

      comp.login();//.then(() => {
        //expect(authService.setCurrentUser).toHaveBeenCalled();
        //expect(userEvent.fire).toHaveBeenCalled();
        expect(router.navigate).toHaveBeenCalled();
        expect(comp.title).toBe("Login Success");
        console.log("title = " + comp.title);
      //}).catch(error => {
      //  console.log("error = " + error);
      //});

    }));
});
});

